{"version":3,"sources":["Component/ShoppingCart/ShoppingCart.js","Component/ShoppingStatement/ShoppingItem/ShoppingItem.js","Store/redux/reducer.js","Component/ShoppingStatement/ShoppingStatement.js","Container/ShoppingApp.js","App.js","reportWebVitals.js","Store/redux/index.js","Store/saga/saga.js","Store/saga/index.js","index.js"],"names":["ShoppingCart","props","item","useRef","quantity","price","form","className","type","placeholder","ref","value","Button","variant","color","onClick","event","preventDefault","isValid","current","alert","checkValidity","submit","ShoppingItem","useState","textForm","setTextForm","editedText","resetState","onBlur","itemTextHandler","id","defaultValue","onDoubleClick","editQuantityHandler","deleteItemHandler","INIT","CREATE_ITEM_INIT","CREATE_ITEM_SUCCESS","EDIT_TEXT_ITEM_INIT","EDIT_TEXT_ITEM_SUCCESS","EDIT_QUANTITY_INIT","EDIT_QUANTITY_SUCCESS","DELETE_ITEM_INIT","DELETE_ITEM_SUCCESS","rules","initialState","totalAmount","shoppingItem","editMode","editData","reducer","state","action","shoppingApp","ShoppingStatement","useSelector","dispatch","useDispatch","items","map","list","actionType","style","fontWeight","ShoppingApp","useEffect","shoppingAction","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","initilizeHandlerSaga","createItemSaga","editTextHandlerSaga","editHandlerSaga","deleteHandlerSaga","window","localStorage","clear","setItem","JSON","stringify","localValue","parse","getItem","updateValue","shoppingItemLast","length","shoppingItemLastItem","itemObject","amount","push","fetchTotalAmount","x","reduce","a","c","put","editmode","editObjIndex","findIndex","splice","watch","takeLatest","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af80ecc1.chunk.js","sourcesContent":["import React, {useRef} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport \"./ShoppingCart.css\";\r\n\r\nconst ShoppingCart =(props) =>{\r\n     const item= useRef(null);\r\n     const quantity = useRef(\"1\");\r\n     const price = useRef(null);\r\n    const checkValidity=()=>{\r\n        let isValid = false;\r\n        if(item.current.value !== null && price.current.value !== null){\r\n            return isValid = true;\r\n        }\r\n        else{\r\n            alert(\"Please Fill The Details Properly\");\r\n        }\r\n        return isValid\r\n    }\r\n    const submitHandler = (event)=>{\r\n        event.preventDefault();\r\n        let valid = checkValidity()\r\n        if(valid){\r\n            props.submit(item.current.value,quantity.current.value,price.current.value);\r\n             item.current.value= null;\r\n             quantity.current.value =\"1\";\r\n             price.current.value =null; \r\n        }\r\n    }\r\n\r\n    let form = (\r\n        <form className=\"ShoppingCart\">\r\n             <label>Item :</label>\r\n             <input type=\"text\" placeholder=\"Product Name\" ref={item}/>\r\n             <label>Quantity :</label>\r\n             <select ref={quantity}>\r\n                 <option value=\"1\">1</option>\r\n                 <option value=\"2\">2</option>\r\n                 <option value=\"3\">3</option>\r\n                 <option value=\"4\">4</option>\r\n                 <option value=\"5\">5</option>\r\n                 <option value=\"6\">6</option>\r\n                 <option value=\"7\">7</option>\r\n                 <option value=\"8\">8</option>\r\n                 <option value=\"9\">9</option>\r\n                 <option value=\"10\">10</option>\r\n             </select>\r\n             <label>Price :</label>\r\n             <input type=\"number\" placeholder=\"Product Price\" ref={price}/>\r\n             <Button variant=\"outlined\" color=\"primary\" onClick = {submitHandler}>Submit</Button>\r\n         </form>\r\n     )\r\n    return(\r\n        <div className=\"container\">\r\n        <h1>Shopping Cart</h1>\r\n        {form}\r\n        </div>\r\n    )\r\n}\r\nexport default ShoppingCart","import React, { useRef, useState } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport \"./ShoppingItem.css\";\r\n\r\nconst ShoppingItem = (props) => {\r\n    const [textForm, setTextForm] = useState(false);\r\n    const editedText = useRef(\"\");\r\n   \r\n    const blurEvent = () => {\r\n        if (editedText.current.value !== \"\") {\r\n            props.itemTextHandler(props.id, editedText.current.value);\r\n            resetState();\r\n        }\r\n    }\r\n    const resetState = () => {\r\n        setTextForm(false);\r\n    }\r\n    return (\r\n        <div className=\"ShoppingItem\">\r\n            {!textForm ? <p onDoubleClick={()=>setTextForm(true)}> Item :<span>{props.item}</span></p>\r\n                : <div\r\n                    onBlur={blurEvent}>\r\n                    <textarea ref={editedText} defaultValue={props.item} />\r\n                </div>\r\n            }\r\n            <div className=\"QuantityDiv\">\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={() => props.editQuantityHandler(props.id, props.quantity, \"add\")}><AddIcon /></Button>\r\n                <p>Quantity : <span>{props.quantity}</span></p>\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={() => props.editQuantityHandler(props.id, props.quantity, \"subract\")}><RemoveIcon /></Button>\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={() => props.deleteItemHandler(props.id)}><DeleteIcon /></Button>\r\n            </div>\r\n            <p>Amount :<span>{props.quantity * props.price}</span> </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShoppingItem;","// Action Type\r\nexport const INIT = \"INIT\";\r\n\r\nexport const CREATE_ITEM_INIT = \"CREATE_ITEM_INIT\";\r\n\r\nexport const CREATE_ITEM_SUCCESS = \"CREATE_ITEM_SUCCESS\";\r\n\r\nexport const EDIT_TEXT_ITEM_INIT = \"EDIT_TEXT_ITEM_INIT\";\r\n\r\nexport const EDIT_TEXT_ITEM_SUCCESS = \"EDIT_TEXT_ITEM_SUCCESS\";\r\n\r\nexport const EDIT_QUANTITY_INIT = \"EDIT_QUANTITY_INIT\";\r\n\r\nexport const EDIT_QUANTITY_SUCCESS = \"EDIT_QUANTITY_SUCCESS\";\r\n\r\nexport const DELETE_ITEM_INIT = \"DELETE_ITEM_INIT\";\r\n\r\nexport const DELETE_ITEM_SUCCESS = \"DELETE_ITEM_SUCCESS\";\r\n\r\n\r\n// Action Create\r\nexport const initilizeHandler = () => {\r\n    return {\r\n        type: INIT\r\n    }\r\n}\r\n\r\nexport const createItemHandler = (item, quantity, price) => {\r\n    return {\r\n        type: CREATE_ITEM_INIT,\r\n        item: item,\r\n        quantity: +quantity,\r\n        price: +price\r\n    }\r\n}\r\n\r\nexport const createItemSuccess = (shoppingApp) => {\r\n    return {\r\n        type: CREATE_ITEM_SUCCESS,\r\n        editmode: shoppingApp.editMode,\r\n        editData: shoppingApp.editData,\r\n        shoppingItem: shoppingApp.shoppingItem,\r\n        totalAmount: shoppingApp.totalAmount\r\n    }\r\n}\r\n\r\nexport const editItemTextHandler = (id, item) => {\r\n    return {\r\n        type: EDIT_TEXT_ITEM_INIT,\r\n        id: id,\r\n        item: item\r\n    }\r\n}\r\n\r\nexport const editItemTextHandlerSuccess = (shoppingApp) => {\r\n    return {\r\n        type: EDIT_TEXT_ITEM_SUCCESS,\r\n        shoppingApp: shoppingApp\r\n    }\r\n}\r\n\r\nexport const editQuantityHandler = (id, quantity, rules) => {\r\n    return {\r\n        type: EDIT_QUANTITY_INIT,\r\n        id: id,\r\n        quantity: quantity,\r\n        rules: rules\r\n    }\r\n}\r\n\r\nexport const editQuantityHandlerSuccess = (shoppingApp) => {\r\n    return {\r\n        type: EDIT_QUANTITY_SUCCESS,\r\n        shoppingApp: shoppingApp\r\n    }\r\n}\r\n\r\nexport const deleteItemHandler = (id) => {\r\n    return {\r\n        type: DELETE_ITEM_INIT,\r\n        id: id\r\n    }\r\n}\r\n\r\nexport const deleteItemHandlerSuccess = (shoppingApp) => {\r\n    return {\r\n        type: DELETE_ITEM_SUCCESS,\r\n        shoppingApp: shoppingApp\r\n    }\r\n}\r\n\r\n// Reducer\r\n\r\nconst initialState = {\r\n    totalAmount: 0,\r\n    shoppingItem: [],\r\n    editMode: false,\r\n    editData: null\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_ITEM_SUCCESS:\r\n            return {\r\n                ...state,\r\n                editData: action.editData,\r\n                editMode: action.editMode,\r\n                shoppingItem: action.shoppingItem,\r\n                totalAmount: action.totalAmount\r\n            }\r\n        case EDIT_QUANTITY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                shoppingItem: action.shoppingApp.shoppingItem,\r\n                totalAmount: action.shoppingApp.totalAmount\r\n            }\r\n        case DELETE_ITEM_SUCCESS:\r\n            return {\r\n                ...state,\r\n                shoppingItem: action.shoppingApp.shoppingItem,\r\n                totalAmount: action.shoppingApp.totalAmount\r\n            }\r\n        case EDIT_TEXT_ITEM_SUCCESS:\r\n            return {\r\n                ...state,\r\n                shoppingItem: action.shoppingApp.shoppingItem\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ShoppingItem from \"./ShoppingItem/ShoppingItem\";\r\nimport * as actionType from \"../../Store/redux/reducer\";\r\nimport \"./ShoppingStatement.css\";\r\n\r\nconst ShoppingStatement = () => {\r\n    const shoppingItem = useSelector(state => state.reducer.shoppingItem);\r\n    const totalAmount = useSelector(state => state.reducer.totalAmount)\r\n    const dispatch = useDispatch();\r\n\r\n    let items = shoppingItem.map(list => {\r\n        return (<ShoppingItem\r\n            key={list.id}\r\n            item={list.item}\r\n            id={list.id}\r\n            quantity={list.quantity}\r\n            price={list.price}\r\n            itemTextHandler={(id, item) => { dispatch(actionType.editItemTextHandler(id, item)) }}\r\n            editQuantityHandler={(id, quantity, rules) => { dispatch(actionType.editQuantityHandler(id, quantity, rules)) }}\r\n            editQuantityHandler={(id, quantity, rules) => { dispatch(actionType.editQuantityHandler(id, quantity, rules)) }}\r\n            deleteItemHandler={(id) => { dispatch(actionType.deleteItemHandler(id)) }}\r\n        />)\r\n    })\r\n    return (\r\n        <div>\r\n            <h1>Shopping Summary</h1>\r\n            <div className=\"ShoppingStatement\">\r\n                {items}\r\n            </div>\r\n            <p style={{ fontWeight: 'bold' }}>Total price : {totalAmount}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShoppingStatement;","import React, { useEffect } from 'react';\r\nimport ShoppingCart from \"../Component/ShoppingCart/ShoppingCart\";\r\nimport ShoppingStatement from \"../Component/ShoppingStatement/ShoppingStatement\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as shoppingAction from \"../Store/redux/reducer\";\r\n\r\nconst ShoppingApp = () => {\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(shoppingAction.initilizeHandler());\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <ShoppingCart submit={(item, quantity, price) => { dispatch(shoppingAction.createItemHandler(item, quantity, price)) }} />\r\n            <ShoppingStatement />\r\n        </div>\r\n    )\r\n}\r\nexport default ShoppingApp;","import ShoppingApp from \"./Container/ShoppingApp\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ShoppingApp/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\r\nimport reducer from \"../redux/reducer\"\r\nexport default combineReducers({\r\n    reducer\r\n})","import * as actionType from \"../redux/reducer\";\r\nimport { put } from \"redux-saga/effects\"\r\n// 1)To initilize local Storage and Clear the Local Storage\r\nexport function* initilizeHandlerSaga() {\r\n    window.localStorage.clear();\r\n    const shoppingApp = {\r\n        editMode: false,\r\n        totalAmount: 0,\r\n        shoppingItem: [],\r\n        editData: null\r\n    }\r\n    yield localStorage.setItem(\"shoppingApp\", JSON.stringify(shoppingApp));\r\n}\r\n// 2) To Create Cart in Local Storage\r\nexport function* createItemSaga(action) {\r\n    const localValue = JSON.parse(localStorage.getItem(\"shoppingApp\"));\r\n    const updateValue = { ...localValue };\r\n    let shoppingItemLast = null;\r\n    if (updateValue.shoppingItem.length !== 0) {\r\n        const shoppingItemLastItem = updateValue.shoppingItem[updateValue.shoppingItem.length - 1];\r\n        shoppingItemLast = shoppingItemLastItem.id\r\n    }\r\n    else {\r\n        shoppingItemLast = 0\r\n    }\r\n    const itemObject = {\r\n        id: +shoppingItemLast + 1,\r\n        item: action.item,\r\n        quantity: action.quantity,\r\n        price: action.price,\r\n        amount: (action.quantity * action.price)\r\n    }\r\n    updateValue.shoppingItem.push(itemObject);\r\n    const fetchTotalAmount = updateValue.shoppingItem.map(x => x.amount).reduce((a, c) => a + c);\r\n    updateValue.totalAmount = fetchTotalAmount;\r\n    updateValue.editMode = false;\r\n    yield localStorage.setItem(\"shoppingApp\", JSON.stringify(updateValue));\r\n    yield put(actionType.createItemSuccess(updateValue));\r\n}\r\n\r\nexport function* editTextHandlerSaga(action) {\r\n    const localValue = JSON.parse(localStorage.getItem(\"shoppingApp\"));\r\n    const updateValue = { ...localValue };\r\n    const editObjIndex = updateValue.shoppingItem.findIndex(item => item.id === action.id)\r\n    updateValue.shoppingItem[editObjIndex].item = action.item;\r\n    yield localStorage.setItem(\"shoppingApp\", JSON.stringify(updateValue));\r\n    yield put(actionType.editItemTextHandlerSuccess(updateValue));\r\n}\r\nexport function* editHandlerSaga(action) {\r\n    const localValue = JSON.parse(localStorage.getItem(\"shoppingApp\"));\r\n    const updateValue = { ...localValue };\r\n    const editObjIndex = updateValue.shoppingItem.findIndex(item => item.id === action.id)\r\n    if (action.rules === \"add\") {\r\n        updateValue.shoppingItem[editObjIndex].quantity = action.quantity + 1;\r\n    }\r\n    else {\r\n        updateValue.shoppingItem[editObjIndex].quantity = action.quantity - 1;\r\n    }\r\n    const fetchTotalAmount = updateValue.shoppingItem.map(x => x.amount).reduce((a, c) => a + c);\r\n    updateValue.totalAmount = fetchTotalAmount;\r\n    yield localStorage.setItem(\"shoppingApp\", JSON.stringify(updateValue));\r\n    yield put(actionType.editQuantityHandlerSuccess(updateValue));\r\n}\r\n\r\nexport function* deleteHandlerSaga(action) {\r\n    const localValue = JSON.parse(localStorage.getItem(\"shoppingApp\"));\r\n    const updateValue = { ...localValue };\r\n    const editObjIndex = updateValue.shoppingItem.findIndex(item => item.id === action.id)\r\n    updateValue.shoppingItem.splice(editObjIndex, 1);\r\n    let fetchTotalAmount = 0\r\n    if (updateValue.shoppingItem.length !== 0) {\r\n        fetchTotalAmount = updateValue.shoppingItem.map(x => x.amount).reduce((a, c) => a + c);\r\n    }\r\n    updateValue.totalAmount = fetchTotalAmount;\r\n    yield localStorage.setItem(\"shoppingApp\", JSON.stringify(updateValue));\r\n    yield put(actionType.deleteItemHandlerSuccess(updateValue));\r\n}","import { takeLatest } from \"@redux-saga/core/effects\";\r\nimport * as actionType from \"../redux/reducer\";\r\n// import * as actionType from \"../redux/shoppingStatement\"; \r\nimport { createItemSaga, initilizeHandlerSaga, editTextHandlerSaga, editHandlerSaga, deleteHandlerSaga } from \"./saga\";\r\n// import {} from \"./shoppingStatement\";\r\nexport function* watch() {\r\n    yield takeLatest(actionType.INIT, initilizeHandlerSaga);\r\n    yield takeLatest(actionType.CREATE_ITEM_INIT, createItemSaga);\r\n    yield takeLatest(actionType.EDIT_TEXT_ITEM_INIT, editTextHandlerSaga);\r\n    yield takeLatest(actionType.EDIT_QUANTITY_INIT, editHandlerSaga);\r\n    yield takeLatest(actionType.DELETE_ITEM_INIT, deleteHandlerSaga);\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {Provider} from \"react-redux\";\nimport {createStore,applyMiddleware,compose} from \"redux\";\nimport rootReducer from \"./Store/redux/index\";\n\nimport {watch} from \"./Store/saga/index\";\nimport createSagaMiddleware from \"redux-saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer,composeEnhancers(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(watch);\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}